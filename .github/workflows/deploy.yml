name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Add SSH key for EC2 access
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: SSH into EC2 and deploy
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST \
            "MONGO_URI='$MONGO_URI' bash -c '
               # Add GitHub to known hosts to prevent SSH prompts
               ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts &&
               
               # Check if the project directory exists and handle git operations
               if [ -d ~/CG_Improvements ]; then
                 echo \"Directory exists. Pulling latest changes...\"
                 cd ~/CG_Improvements
                 git stash                   # Stash any local changes
                 git pull origin main        # Pull the latest changes
                 git stash pop || true       # Reapply stashed changes if there were any
               else
                 echo \"Directory does not exist. Cloning repository...\"
                 git clone git@github.com:atulwaster24/CG_Improvements.git ~/CG_Improvements
                 cd ~/CG_Improvements
               fi
               
               # Set up environment variables
               echo MONGO_URI=\$MONGO_URI > .env &&
               
               # Debug: print .env to confirm MONGO_URI value
               cat .env &&
               
               # Give execute permissions to deploy.sh if not set
               chmod +x ./config/scripts/deploy.sh &&
               
               # Run deploy script
               ./config/scripts/deploy.sh
            '"
